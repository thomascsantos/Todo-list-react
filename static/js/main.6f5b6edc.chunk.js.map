{"version":3,"sources":["components/Card.js","components/ListItem.js","components/List.js","components/Item.js","components/TodoForm.js","Todo.js","reportWebVitals.js","index.js"],"names":["Card","props","react_default","a","createElement","className","concat","children","DoneImg","done","alt","src","ListItem","components_Card","item","text","onClick","onDone","onItemDeleted","List","items","map","components_ListItem","key","id","Item","Object","classCallCheck","this","lastId","TodoForm","_useState","useState","_useState2","slicedToArray","setText","onChange","event","t","target","value","type","preventDefault","onAddItem","SAVED_ITEMS","Todo","setItems","useEffect","savedItems","JSON","parse","localStorage","getItem","setItem","stringify","components_TodoForm","toConsumableArray","components_List","updateItems","it","filteredItems","filter","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_Todo"],"mappings":"oMAWeA,MARf,SAAcC,GAEV,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAMI,UAAN,GAAAC,OAAoBL,EAAMI,UAA1B,SAA2C,QACtDJ,EAAMM,WCJnB,SAASC,EAAQP,GACb,OAAIA,EAAMQ,KACEP,EAAAC,EAAAC,cAAA,OAAKM,IAAI,OAAOC,IAAI,oBAEpBT,EAAAC,EAAAC,cAAA,OAAKM,IAAI,SAASC,IAAI,qBAiBvBC,MAbf,SAAkBX,GACd,OAAQC,EAAAC,EAAAC,cAAA,UACJF,EAAAC,EAAAC,cAACS,EAAD,CAAMR,UAAWJ,EAAMa,KAAKL,KAAO,YAAc,QAC5CR,EAAMa,KAAKC,KACZb,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQY,QAAS,WAAQf,EAAMgB,OAAOhB,EAAMa,QAASZ,EAAAC,EAAAC,cAACI,EAAD,CAASC,KAAMR,EAAMa,KAAKL,QAE/EP,EAAAC,EAAAC,cAAA,UAAQY,QAAS,WAAQf,EAAMiB,cAAcjB,EAAMa,QAASZ,EAAAC,EAAAC,cAAA,OAAKM,IAAI,SAASC,IAAI,4BCTnFQ,MANd,SAAclB,GACX,OAASC,EAAAC,EAAAC,cAAA,UACAH,EAAMmB,MAAMC,IAAI,SAAAP,GAAI,OAAGZ,EAAAC,EAAAC,cAACkB,EAAD,CAAUC,IAAKT,EAAKU,GAAIV,KAAMA,EAAMG,OAAQhB,EAAMgB,OAAQC,cAAejB,EAAMiB,2BCL7GO,EAEF,SAAAA,EAAYV,GAAOW,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GACfG,KAAKJ,GAAKC,EAAKI,SACfD,KAAKb,KAAOA,EACZa,KAAKnB,MAAO,GALdgB,EACKI,OAAS,EAQLJ,QCiBAK,MAxBf,SAAkB7B,GAAO,IAAA8B,EAEGC,mBAAS,IAFZC,EAAAP,OAAAQ,EAAA,EAAAR,CAAAK,EAAA,GAEdhB,EAFckB,EAAA,GAERE,EAFQF,EAAA,GAerB,OACI/B,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,SAAOgC,SAbf,SAAsBC,GAClB,IAAIC,EAAID,EAAME,OAAOC,MACrBL,EAAQG,IAW2BG,KAAK,OAAOD,MAAOzB,IAClDb,EAAAC,EAAAC,cAAA,UAAQY,QAVhB,SAAiBqB,GACbA,EAAMK,iBACF3B,IACAd,EAAM0C,UAAU5B,GAChBoB,EAAQ,MAMkB9B,UAAU,OAApC,SCdNuC,SAAc,cAkDLC,MAhDf,WAAgB,IAAAd,EAEcC,mBAAS,IAFvBC,EAAAP,OAAAQ,EAAA,EAAAR,CAAAK,EAAA,GAELX,EAFKa,EAAA,GAEEa,EAFFb,EAAA,GAqCZ,OAjCAc,oBAAU,WACN,IAAIC,EAAaC,KAAKC,MAAMC,aAAaC,QAAQR,IAC7CI,GACAF,EAASE,IAEd,IAEHD,oBAAU,WACNI,aAAaE,QAAQT,EAAaK,KAAKK,UAAUlC,KAClD,CAACA,IAyBAlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAACmD,EAAD,CAAUZ,UAzBlB,SAAmB5B,GACf,IAAID,EAAO,IAAIW,EAAKV,GAEpB+B,EAAQ,GAAAxC,OAAAoB,OAAA8B,EAAA,EAAA9B,CAAKN,GAAL,CAAYN,QAuBhBZ,EAAAC,EAAAC,cAACqD,EAAD,CAAMxC,OAfd,SAAgBH,GAEZ,IAAI4C,EAActC,EAAMC,IAAI,SAAAsC,GAIxB,OAHIA,EAAGnC,KAAOV,EAAKU,KACfmC,EAAGlD,MAAQkD,EAAGlD,MAEXkD,IAEXb,EAASY,IAOiBxC,cArB9B,SAAuBJ,GAEnB,IAAI8C,EAAgBxC,EAAMyC,OAAO,SAAAF,GAAE,OAAIA,EAAGnC,KAAOV,EAAKU,KAEtDsB,EAASc,IAiB+CxC,MAAOA,MCrCxD0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH7E,EAAAC,EAAAC,cAACF,EAAAC,EAAM6E,WAAP,KACE9E,EAAAC,EAAAC,cAAC6E,EAAD,QAOJnB","file":"static/js/main.6f5b6edc.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nfunction Card(props) {\r\n\r\n    return(\r\n        <div className={props.className? `${props.className} card`:\"card\"}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\nexport default Card","import React from \"react\"\r\nimport Card from './Card'\r\n\r\nfunction DoneImg(props) {\r\n    if (props.done) {\r\n        return (<img alt=\"done\" src=\"./Assets/on.png\"></img>)\r\n    } else {\r\n        return (<img alt=\"undone\" src=\"./Assets/add.png\"></img>)\r\n    }\r\n}\r\n\r\nfunction ListItem(props) {\r\n    return (<li>\r\n        <Card className={props.item.done ? \"done item\" : \"item\"}>\r\n            {props.item.text}\r\n            <div>\r\n                <button onClick={() => { props.onDone(props.item) }}><DoneImg done={props.item.done}></DoneImg>\r\n                </button>\r\n                <button onClick={() => { props.onItemDeleted(props.item) }}><img alt=\"delete\" src=\"./Assets/trash.png\"></img></button>\r\n            </div>\r\n        </Card>\r\n    </li>)\r\n}\r\n\r\nexport default ListItem","import React from \"react\"\r\nimport ListItem from \"./ListItem\"\r\n\r\n function List(props) {\r\n    return ( <ul>\r\n            {props.items.map(item =><ListItem key={item.id} item={item} onDone={props.onDone} onItemDeleted={props.onItemDeleted}></ListItem>)}\r\n        </ul>)\r\n}\r\n\r\nexport default List","class Item {\r\n    static lastId = 0\r\n    constructor(text) {\r\n        this.id = Item.lastId++\r\n        this.text = text\r\n        this.done = false\r\n    }\r\n\r\n}\r\nexport default Item","import React, { useState } from \"react\";\r\n\r\nfunction TodoForm(props) {\r\n\r\n    const [text, setText] = useState(\"\")\r\n    \r\n    function handleChange(event) {\r\n        let t = event.target.value\r\n        setText(t)\r\n    }\r\n    function addItem(event) {\r\n        event.preventDefault()\r\n        if (text) {\r\n            props.onAddItem(text)\r\n            setText(\"\")\r\n        }\r\n    }\r\n    return (\r\n        <form>\r\n            <input onChange={handleChange} type=\"text\" value={text}></input>\r\n            <button onClick={addItem} className=\"add\">Add</button>\r\n        </form>\r\n    )\r\n\r\n\r\n}\r\nexport default TodoForm","import React, { useEffect, useState } from \"react\";\r\nimport List from \"./components/List\";\r\nimport Item from './components/Item'\r\nimport TodoForm from \"./components/TodoForm\";\r\nimport './Todo.css'\r\n\r\nconst SAVED_ITEMS = \"savedItems\"\r\n\r\nfunction Todo() {\r\n\r\n    const [items, setItems] = useState([])\r\n\r\n    useEffect(() => {\r\n        let savedItems = JSON.parse(localStorage.getItem(SAVED_ITEMS))\r\n        if (savedItems) {\r\n            setItems(savedItems)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(SAVED_ITEMS, JSON.stringify(items))\r\n    }, [items])\r\n\r\n    function onAddItem(text) {\r\n        let item = new Item(text)\r\n\r\n        setItems([...items, item])\r\n    }\r\n    function onItemDeleted(item) {\r\n\r\n        let filteredItems = items.filter(it => it.id !== item.id)\r\n\r\n        setItems(filteredItems)\r\n    }\r\n    function onDone(item) {\r\n\r\n        let updateItems = items.map(it => {\r\n            if (it.id === item.id) {\r\n                it.done = !it.done\r\n            }\r\n            return it\r\n        })\r\n        setItems(updateItems)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Todo-List</h1>\r\n            <TodoForm onAddItem={onAddItem}></TodoForm>\r\n            <List onDone={onDone} onItemDeleted={onItemDeleted} items={items}></List>\r\n        </div>)\r\n\r\n}\r\n\r\n\r\n\r\nexport default Todo","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport Todo from './Todo';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Todo />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}